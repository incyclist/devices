import DeviceProtocol from './DeviceProtocol';
export default class Device {
    protocol: DeviceProtocol;
    detected: boolean;
    selected: boolean;
    onDataFn: any;
    constructor(proto: any);
    getID(): void;
    getDisplayName(): void;
    getName(): void;
    getPort(): void;
    getProtocol(): DeviceProtocol;
    getProtocolName(): void;
    setIgnoreHrm(ignore: any): void;
    setIgnorePower(ignore: any): void;
    setIgnoreBike(ignore: any): void;
    select(): void;
    unselect(): void;
    isSelected(): boolean;
    setDetected(detected?: boolean): void;
    isDetected(): boolean;
    update(): void;
    check(): void;
    connect(): void;
    close(): void;
    start(props?: any): Promise<any>;
    stop(): Promise<boolean>;
    pause(): Promise<boolean>;
    resume(): Promise<boolean>;
    sendUpdate(request: any): void;
    onData(callback: any): void;
}
